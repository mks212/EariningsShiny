load_file_get_fname <- function(year, quarter){
url = get_url(year, quarter)
result = tryCatch(
{
print(paste0("Downloading for ", year, " ", quarter))
read.csv(url)
},
error = function(e) {
print(paste0("The url might not exist, no data for ", year, quarter, " is loaded."))
NULL}
)
fname = paste0(year, "-", quarter, ".csv")
path = paste0("./data/", fname)
if(length(result)!=0){
write.csv(result, path, row.names = FALSE)
} else {
fname = NULL
}
return(fname)
}
lst_fnames = character()
four_quarters = paste("Q", 1:4, sep = "")
for(year in 2009:2018){
for(quarter in four_quarters){
i = length(lst_fnames) + 1
fname = load_file_get_fname(year, quarter)
if(length(fname)!=0){
lst_fnames[i] = fname
}
}
}
write(lst_fnames, "data/lst_fnames.txt")
source('/Volumes/michaelsankari/Documents/NYC Data Science/R/midterm/midterm.R')
source('/Volumes/michaelsankari/Documents/NYC Data Science/R/midterm/midterm.R')
df <- get_all_data()
set_dir()
load_packages()
df <- get_all_data()
source('/Volumes/michaelsankari/Documents/NYC Data Science/R/midterm/midterm.R')
source('/Volumes/michaelsankari/Documents/NYC Data Science/R/midterm/midterm.R')
df <- get_all_data()
source('/Volumes/michaelsankari/Documents/NYC Data Science/R/midterm/midterm.R')
source('/Volumes/michaelsankari/Documents/NYC Data Science/R/midterm/midterm.R')
df <- get_all_data()
df <- get_all_data()
source('/Volumes/michaelsankari/Documents/NYC Data Science/R/midterm/midterm.R')
set_dir()
load_packages()
df <- get_all_data()
source('/Volumes/michaelsankari/Documents/NYC Data Science/R/midterm/midterm.R')
View(df)
unique(df$OFFICE)
colnames(df) <- tolower(colnames(df))
View(df)
df$start.date <- mdy(df$start.date)
df <- readRDS('all_data.rds')
start.date <- as.Date(df$start.date)
start.date <- parse_date(df$start.date)
install.packages('parsedate')
library(parsedate)
start.date <- parse_date(df$start.date)
class(df$START.DATE)
colnames(df) <- tolower(colnames(df))
start.date <- parse_date(df$start.date)
start.date <- parse_date_time(df$start.date)
df$start.date[1]
str_detect(df$start.date[1], '\\')
str_detect(df$start.date[1], '\/')
str_detect(df$start.date[1], '/')
start.date <- ifelse(str_detect(df$start.date, '/'), mdy(df$start.date), df$start.date)
start.date <- ifelse(str_detect(df$start.date, '/'), as.Date(mdy(df$start.date)), df$start.date)
start.date[1:10]
start.date[10000:10005
]
df$start.date2 <- ifelse(str_detect(df$start.date, '/'), as.Date(mdy(df$start.date)), df$start.date)
df$start.date2 <- as.Date(df$start.date2)
source('/Volumes/michaelsankari/Documents/NYC Data Science/R/midterm/midterm.R')
rm(start.date)
df <- readRDS('all_data.rds')
source('/Volumes/michaelsankari/Documents/NYC Data Science/R/midterm/midterm.R')
colnames(df) <- tolower(colnames(df))
df$start.date2 <- clean_date(df$start.date)
source('/Volumes/michaelsankari/Documents/NYC Data Science/R/midterm/midterm.R')
df$start.date2 <- clean_date(df$start.date)
View(df)
source('/Volumes/michaelsankari/Documents/NYC Data Science/R/midterm/midterm.R')
df$start.date2 <- clean_date(df$start.date)
head(df$start.date)
source('/Volumes/michaelsankari/Documents/NYC Data Science/R/midterm/midterm.R')
df$start.date2 <- clean_date(df$start.date)
source('/Volumes/michaelsankari/Documents/NYC Data Science/R/midterm/midterm.R')
source('/Volumes/michaelsankari/Documents/NYC Data Science/R/midterm/midterm.R')
df$start.date2 <- clean_date(df$start.date)
source('/Volumes/michaelsankari/Documents/NYC Data Science/R/midterm/midterm.R')
source('/Volumes/michaelsankari/Documents/NYC Data Science/R/midterm/midterm.R')
df$start.date2 <- clean_date(df$start.date)
source('/Volumes/michaelsankari/Documents/NYC Data Science/R/midterm/midterm.R')
df$start.date2 <- clean_date(df$start.date)
source('/Volumes/michaelsankari/Documents/NYC Data Science/R/midterm/midterm.R')
df$start.date2 <- clean_date(df$start.date)
source('/Volumes/michaelsankari/Documents/NYC Data Science/R/midterm/midterm.R')
df$start.date2 <- clean_date(df$start.date)
source('/Volumes/michaelsankari/Documents/NYC Data Science/R/midterm/midterm.R')
df$start.date2 <- clean_date(df$start.date)
source('/Volumes/michaelsankari/Documents/NYC Data Science/R/midterm/midterm.R')
df$start.date2 <- clean_date(df$start.date)
source('/Volumes/michaelsankari/Documents/NYC Data Science/R/midterm/midterm.R')
df$start.date2 <- clean_date(df$start.date)
source('/Volumes/michaelsankari/Documents/NYC Data Science/R/midterm/midterm.R')
df$start.date2 <- clean_date(df$start.date)
source('/Volumes/michaelsankari/Documents/NYC Data Science/R/midterm/midterm.R')
df$start.date2 <- clean_date(df$start.date)
source('/Volumes/michaelsankari/Documents/NYC Data Science/R/midterm/midterm.R')
df$start.date2 <- clean_date(df$start.date)
df$start.date2 <- mdy(df$start.date)
source('/Volumes/michaelsankari/Documents/NYC Data Science/R/midterm/midterm.R')
df$end.date <- mdy(df$end.date)
df <- readRDS('all_data.rds')
colnames(df) <- tolower(colnames(df))
#row where dates switch formats: 3439225
df$start.date[1:3439225] <- mdy(df$start.date[1:3439225])
df$end.date[1:3439225] <- mdy(df$end.date[1:3439225])
df$start.date[3439226:nrow(df)] <- ymd(df$start.date[3439226:nrow(df)])
df$end.date[3439226:nrow(df)] <- ymd(df$end.date[3439226:nrow(df)])
class(df$start.date)
df$start.date <- as.character.Date(df$start.date)
df$start.date <- as.numeric(df$start.date)
df$start.date <- as.Date(df$start.date, origin = "1970-01-01")
df$end.date <- as.numeric(df$end.date)
df$end.date <-  as.Date(df$end.date, origin = "1970-01-01")
df <- na.omit(df)
source('/Volumes/michaelsankari/Documents/NYC Data Science/R/midterm/midterm.R')
View(df)
df$amount <- gsub(pattern = ',',replacement = '',x = df$amount)
df$amount <- as.numeric(df$amount)
source('/Volumes/michaelsankari/Documents/NYC Data Science/R/midterm/midterm.R')
#Q1
sum(df$amount)
#Q2
df$coverage.period <- df$end.date - df$start.date
sd(df$coverage.period[df$coverage.period>0])
#Q3
avg_amount <- df[df$start.date >=2010 & df$start.date <= 2016,]
#Q3
avg_amount <- df[year(df$start.date) >=2010 & year(df$start.date <= 2016),]
year(df$start.date[1])
df <- na.omit(df)
#Q3
avg_amount <- df[year(df$start.date) >=2010 & year(df$start.date) <= 2016,]
library(dplyr)
#Q3
avg_amount <- df %>% mutate(., year = year(start.date)) %>% group_by(., year) %>%
summarise(., avg_exp = mean(amount))
View(avg_amount)
#Q3
avg_amount <- df %>% mutate(., year = year(start.date)) %>% filter(., year>=2010, year<=2016) %>%
group_by(., year) %>% summarise(., avg_exp = mean(amount))
View(avg_amount)
#Q4
q4 <- df %>% mutate(., year = year(start.date)) %>% filter(., year==2016) %>%
summarise(., tot_exp = sum(amount)) %>% select(., office, purpose)
#Q4
q4 <- df %>% mutate(., year = year(start.date)) %>% filter(., year==2016) %>% top_n(1, amount) %>%
select(., office, purpose)
View(q4)
#Q4
q4 <- df %>% mutate(., year = year(start.date)) %>% filter(., year==2016) %>% top_n(1, amount)
View(q4)
#Q4
q4 <- df %>% mutate(., year = year(start.date)) %>% filter(., year==2016) %>% group_by(., office, purpose) %>%
top_n(1, amount)
View(q4)
q4 <- df %>% mutate(., year = year(start.date)) %>% filter(., year==2016) %>% group_by(., office) %>%
top_n(1, amount)
View(q4)
q4 <- df %>% group_by(., office) %>% mutate(., year = year(start.date)) %>% filter(., year==2016) %>%
top_n(1, amount)
View(q4)
#Q4
q4 <- df %>% group_by(., office) %>% mutate(., year = year(start.date)) %>% filter(., year==2016)
View(q4)
#Q4
q4 <- df %>% group_by(., office) %>% mutate(., year = year(start.date)) %>% filter(., year==2016) %>%
summarise(., tot_exp = sum(amount)) %>% top_n(1, tot_exp)
View(q4)
q4_1
q4_1 <- df %>% group_by(., office) %>% mutate(., year = year(start.date)) %>% filter(., year==2016) %>%
summarise(., tot_exp = sum(amount)) %>% top_n(1, tot_exp)
q4_1
q4_1[1,1]
q4_1$office
q4_2 <- df %>% mutate(., year = year(start.date)) %>% filter(., year==2016, office=q4_1$office) %>%
group_by(., purpose) %>%  summarise(., tot_exp = sum(amount)) %>% top_n(1, tot_exp)
q4_2 <- df %>% mutate(., year = year(start.date)) %>% filter(., year==2016, office==q4_1$office) %>%
group_by(., purpose) %>%  summarise(., tot_exp = sum(amount)) %>% top_n(1, tot_exp)
View(q4_2)
q4_2
q4_3 <- df %>% mutate(., year = year(start.date)) %>% filter(., year==2016) %>% summarise(., q4_2$purpose/sum(amount))
q4_3 <- df %>% mutate(., year = year(start.date)) %>% filter(., year==2016) #%>% summarise(., q4_2$purpose/sum(amount))
View(q4_3)
q4_3 <- df %>% mutate(., year = year(start.date)) %>% filter(., year==2016) %>% summarise(., sum(amount))
View(q4_3)
q4_3
q4_3 <- df %>% mutate(., year = year(start.date)) %>% filter(., year==2016) %>% summarise(., total = sum(amount))
q4_3 <- q4_2$tot_exp/q4_3$total
View(q4_1)
source('/Volumes/michaelsankari/Documents/NYC Data Science/R/midterm/midterm.R')
unique(df$office)
source('/Volumes/michaelsankari/Documents/NYC Data Science/R/midterm/midterm.R')
shiny::runApp('/Volumes/michaelsankari/Documents/NYC Data Science/R/shiny/jumpstart/shiny_db_demo/shiny_csv')
library(RSQLite)
library(data.table)
install.packages('RSQLite')
library(RSQLite)
library(data.table)
csvpath = "./"
dbname = "./flights.sqlite"
tblname = "flights"
## read csv
data <- fread(input = csvpath,
sep = ",",
header = TRUE)
csvpath = ""
## read csv
data <- fread(input = csvpath,
sep = ",",
header = TRUE)
getwd()
setwd('/Volumes/michaelsankari/Documents/NYC Data Science/R/shiny/jumpstart/shiny_db_demo/shiny_sqlite')
## read csv
data <- fread(input = csvpath,
sep = ",",
header = TRUE)
csvpath = "./flights14.csv"
## read csv
data <- fread(input = csvpath,
sep = ",",
header = TRUE)
## connect to database
conn <- dbConnect(drv = SQLite(),
dbname = dbname)
rm(df)
rm(q*)
rm(q4)
rm(q4_1)
rm(q4_2)
rm(q4_3)
## write table
dbWriteTable(conn = conn,
name = tblname,
value = data)
## list tables
dbListTables(conn)
## disconnect
dbDisconnect(conn)
runApp()
install.packages('rsconnect')
rsconnect::setAccountInfo(name='mks212', token='42FD7E9FCD6265AE9A9FFFF4D4E8E976', secret='tRioDKtPMWI30J64yBD1nckFK4u/ycoWTNkrQ3mw')
runApp('/Volumes/michaelsankari/Documents/NYC Data Science/R/shiny/shinyApps/shinyDashBoard')
install.packages('DT')
runApp('/Volumes/michaelsankari/Documents/NYC Data Science/R/shiny/shinyApps/shinyDashBoard')
install.packages('shinydashboard')
runApp('/Volumes/michaelsankari/Documents/NYC Data Science/R/shiny/shinyApps/shinyDashBoard')
install.packages('googleVis')
runApp('/Volumes/michaelsankari/Documents/NYC Data Science/R/shiny/shinyApps/shinyDashBoard')
setwd(/Volumes/michaelsankari/Documents/NYC Data Science)
setwd('/Volumes/michaelsankari/Documents/NYC Data Science')
setwd('/Volumes/michaelsankari/Documents/NYC Data Science/Earnings Shiny')
get_sp500<- function(){
set_data_dir()
return(readRDS('sp500.rds'))
}
get_prices <- function(){
set_data_dir()
return(readRDS('all_prices.rds'))
}
get_dates <- function() {
set_data_dir()
dates <- readRDS('dates.rds')
return(dates)
}
set_date_dir <- function(){
set_dir()
setwd(paste0(getwd(), '/data/dates'))
}
set_data_dir <- function(){
set_dir()
new_path <- paste0(getwd(), '/data')
setwd(new_path)
}
set_dir <- function(){
if (Sys.info()["nodename"] == "Michaels-Air.fios-router.home"){
setwd('/Users/michaelsankari/Documents/NYC Data Science/Earnings Shiny')
}
else{
setwd('/Volumes/michaelsankari/Documents/NYC Data Science/Earnings Shiny')
}
}
load_packages <- function(){
library(lubridate)
library(stringr)
library(DT)
library(shinydashboard)
}
load_packages()
dates <- get_dates()
all_prices <- get_prices()
sp500 <- get_sp500()
View(dates)
choice <- unique(dates$ticker)
choice
library(dplyr)
runApp('/Volumes/michaelsankari/Documents/NYC Data Science/Earnings Shiny')
runApp('/Volumes/michaelsankari/Documents/NYC Data Science/Earnings Shiny')
runApp('/Volumes/michaelsankari/Documents/NYC Data Science/Earnings Shiny')
runApp('/Volumes/michaelsankari/Documents/NYC Data Science/Earnings Shiny')
runApp('/Volumes/michaelsankari/Documents/NYC Data Science/Earnings Shiny')
View(dates)
View(all_prices)
output$avgBox <- renderInfoBox(
infoBox(paste("AVG.", input$selected),
avg_df <- all_prices %>% filter (., ticker== input$selected)
mean(state_stat[,input$selected]),
icon = icon("calculator"), fill = TRUE))
avg_df <- all_prices %>% filter (., ticker== input$selected)
runApp('/Volumes/michaelsankari/Documents/NYC Data Science/Earnings Shiny')
library(googleVis)
runApp('/Volumes/michaelsankari/Documents/NYC Data Science/Earnings Shiny')
all_prices %>% filter (., ticker== input$selected) %>%
top_n(1, price.close)
input$selected <- 'A'
all_prices %>% filter (., ticker== 'A') %>%
top_n(1, price.close)
all_prices %>% filter (., ticker== 'A') %>%
select(., price.close) %>%  top_n(1, price.close)
runApp('/Volumes/michaelsankari/Documents/NYC Data Science/Earnings Shiny')
runApp('/Volumes/michaelsankari/Documents/NYC Data Science/Earnings Shiny')
runApp('/Volumes/michaelsankari/Documents/NYC Data Science/Earnings Shiny')
library(dplyr)
runApp('/Volumes/michaelsankari/Documents/NYC Data Science/Earnings Shiny')
all_prices %>% filter (., ticker== 'A') %>%  top_n(30)
runApp('/Volumes/michaelsankari/Documents/NYC Data Science/Earnings Shiny')
all_prices %>% filter (., ticker== 'A') %>%
select(., price.close) %>%  slice(seq(1:20))
runApp('/Volumes/michaelsankari/Documents/NYC Data Science/Earnings Shiny')
View(dates)
runApp('/Volumes/michaelsankari/Documents/NYC Data Science/Earnings Shiny')
library(TTR)
runApp('/Volumes/michaelsankari/Documents/NYC Data Science/Earnings Shiny')
dates_input <- dates %>% filter(., ticker== 'AAPL')
prices_input <- all_prices %>% filter(., ticker== 'AAPL')
View(dates_input)
colnames(all_prices)
prices_input <- all_prices %>% filter(., ticker== 'AAPL') %>%
select(., ticker, ref.date, price.close)
View(prices_input)
prices_input$return <- ifelse(prices_input$ref.date %in% dates_input$date,
ROC(x = prices_input$price.close, n = 1),
NA)
prices_input$return <- ROC(x = prices_input$price.close, n = 1)
(154.68 - 156.30)/156.3
infoBox(
paste("Average Return After ", input$length, "Day(s)"),
dates_input <- dates %>% filter(., ticker== input$selected),
prices_input <- all_prices %>% filter(., ticker== input$selected) %>%
select(., ticker, ref.date, price.close),
prices_input$return <- ROC(x = prices_input$price.close, n = input$length, type = 'discrete')
)#close info box
prices_input$return <- ROC(x = prices_input$price.close, n = 1, type = 'discrete')
prices_input$return <- c(prices_input$return[1+1:nrow(prices)], rep(NA, 1))
prices_input$return <- c(prices_input$return[1+1:nrow(prices_input)], rep(NA, 1))
prices_input$return <- c(tail(prices_input$return, length(prices_input$return)-1 ), NA)
(112.34-107.72)/107.72
prices_input$return <- c(tail(prices_input$return, length(prices_input$return)-1 ), rep(NA,1) )
earnings_returns <- inner_join(dates_input, prices_input, by = 'date')
dates_input <- dates %>% filter(., ticker== input$selected),
prices_input <- all_prices %>% filter(., ticker== input$selected) %>%
select(., ticker, date = ref.date, price.close), #rename ref.date to date to match dates_input column
prices_input$return <- ROC(x = prices_input$price.close, n = input$length, type = 'discrete'),
#Put return that comes days later in same row ads announcement date
prices_input$return <- c(tail(prices_input$return, length(prices_input$return)-input$length ), rep(NA,input$length))
prices_input$date <- prices_input$ref.date
prices_input$ref.date <- NULL
infoBox(
paste("Average Return After ", input$length, "Day(s)"),
dates_input <- dates %>% filter(., ticker== input$selected),
prices_input <- all_prices %>% filter(., ticker== input$selected) %>%
select(., ticker, date = ref.date, price.close), #rename ref.date to date to match dates_input column
prices_input$return <- ROC(x = prices_input$price.close, n = input$length, type = 'discrete'),
#Put return that comes days later in same row ads announcement date
prices_input$return <- c(tail(prices_input$return, length(prices_input$return)-input$length ), rep(NA,input$length)),
earnings_returns <- inner_join(dates_input, prices_input, by = 'date')
)#close info box
earnings_returns <- inner_join(dates_input, prices_input, by = 'date')
View(earnings_returns)
?inner_join
earnings_returns$ticker.y <- NULL
colnames(earnings_returns)[3] <- 'ticker'
x <- ymd(c("2012-03-26", "2012-05-04", "2012-09-23", "2012-12-31"))
quarter(x)
earnings$quarter <- quarter(earnings$date)
earnings_returns$quarter <- quarter(earnings_returns$date)
mean(earnings_returns$return)
runApp('/Volumes/michaelsankari/Documents/NYC Data Science/Earnings Shiny')
runApp('/Volumes/michaelsankari/Documents/NYC Data Science/Earnings Shiny')
avg=2.058896
format(avg, nsmall=2)
runApp('/Volumes/michaelsankari/Documents/NYC Data Science/Earnings Shiny')
all_prices <- get_prices()
all_prices <- readRDS('all_prices.rds')
colnames(all_prices)
colnames(all_prices)[7]
colnames(all_prices)[7] <- 'date'
saveRDS(all_prices, file = 'all_prices.rds')
getwd()
runApp('/Volumes/michaelsankari/Documents/NYC Data Science/Earnings Shiny')
runApp('/Volumes/michaelsankari/Documents/NYC Data Science/Earnings Shiny')
runApp('/Volumes/michaelsankari/Documents/NYC Data Science/Earnings Shiny')
dates_input <- dates %>% filter(., ticker== 'AAPL')
prices_input <- all_prices %>% filter(., ticker== 'AAPL') %>%
select(., ticker, date, price.close)
prices_input$return <- ROC(x = prices_input$price.close, n = 5, type = 'discrete')
#Put return that comes days later in same row ads announcement date
prices_input$return <- c(tail(prices_input$return, length(prices_input$return)-5 ), rep(NA,5))
earnings_returns <- inner_join(dates_input, prices_input, by = 'date')
View(earnings_returns)
earnings_returns$ticker.y <- NULL
colnames(earnings_returns)[3] <- 'ticker'
runApp('/Volumes/michaelsankari/Documents/NYC Data Science/Earnings Shiny')
runApp('/Volumes/michaelsankari/Documents/NYC Data Science/Earnings Shiny')
dates_input <- dates %>% filter(., ticker== 'AAPL')
prices_input <- all_prices %>% filter(., ticker== 'AAPL') %>%
select(., ticker, date, price.close)
prices_input$return <- ROC(x = prices_input$price.close, n = 5, type = 'discrete')
#Put return that comes days later in same row ads announcement date
prices_input$return <- c(tail(prices_input$return, length(prices_input$return)-5 ), rep(NA,5))
earnings_returns <- inner_join(dates_input, prices_input, by = 'date')
earnings_returns$ticker.y <- NULL
colnames(earnings_returns)[3] <- 'ticker'
ticker <- earnings_returns$ticker[1]
ggplot(data = earnings_returns, aes(x=date, y=return, fill=factor(sign(return)))) +
geom_col(show.legend = FALSE) +
ggtitle(paste(ticker, 'Returns', 5, 'Day(s) After Announcement'))+
scale_fill_brewer(palette="Set1")  +
theme(axis.text.x = element_text(angle = 90, hjust=2 ,vjust=0.5))
ggplot(data = earnings_returns, aes(x=date, y=return, fill=factor(sign(return)))) +
geom_col(show.legend = FALSE) +
ggtitle(paste(ticker, 'Returns', 5, 'Day(s) After Announcement'))+
scale_fill_brewer(palette="Set1")  +
theme(axis.text.x = element_text(angle = 90, hjust=0 ,vjust=0.5))
ggplot(data = earnings_returns, aes(x=date, y=return, fill=factor(sign(return)))) +
geom_col(show.legend = FALSE) +
ggtitle(paste(ticker, 'Returns', 5, 'Day(s) After Announcement'))+
scale_fill_brewer(palette="Set1")  +
theme(axis.text.x = element_text(angle = 90, hjust=-2 ,vjust=0.5))
ggplot(data = earnings_returns, aes(x=date, y=return, fill=factor(sign(return)))) +
geom_col(show.legend = FALSE) +
ggtitle(paste(ticker, 'Returns', 5, 'Day(s) After Announcement'))+
scale_fill_brewer(palette="Set1")  +
theme(axis.text.x = element_text(angle = 90, hjust=-20 ,vjust=0.5))
ggplot(data = earnings_returns, aes(x=date, y=return, fill=factor(sign(return)))) +
geom_col(show.legend = FALSE) +
ggtitle(paste(ticker, 'Returns', 5, 'Day(s) After Announcement'))+
scale_fill_brewer(palette="Set1")
ggplot(data = earnings_returns, aes(x=date, y=return, fill=factor(sign(return)))) +
geom_col(show.legend = FALSE) +
ggtitle(paste(ticker, 'Returns', 5, 'Day(s) After Announcement'))+
scale_fill_brewer(palette="Set1")  +
theme(axis.text.x = element_text(angle = 90))
dput(earnings_returns)
runApp('/Volumes/michaelsankari/Documents/NYC Data Science/Earnings Shiny')
ggplot(data = earnings_returns, aes(x=factor(date), y=return, fill=factor(sign(return)))) +
geom_col(show.legend = FALSE) +
ggtitle(paste(ticker, 'Returns', 5, 'Day(s) After Announcement'))+
scale_fill_brewer(palette="Set1")  +
theme(plot.title = element_text(hjust = 0.5),
axis.text.x = element_text(angle = 90))
runApp('/Volumes/michaelsankari/Documents/NYC Data Science/Earnings Shiny')
View(sp500)
runApp('/Volumes/michaelsankari/Documents/NYC Data Science/Earnings Shiny')
quarter(earnings_returns$quarter)
quarter(earnings_returns$date)
View(earnings_returns)
earnings_returns
quarter_date <- earnings_returns %>% group_by(., quarter) %>% summarise(., total_obs = n(),
winners = sum(return>0),
Avg_Win = mean(return))
earnings_returns$quarter <-  quarter(earnings_returns$date)
quarter_date <- earnings_returns %>% group_by(., quarter) %>% summarise(., total_obs = n(),
winners = sum(return>0),
Avg_Win = mean(return))
quarter_date
quarter_date <- earnings_returns %>% group_by(., quarter) %>% summarise(., win_rate = sum(return>0)/n(),
Avg_Win = mean(return))
quarter_date
runApp('/Volumes/michaelsankari/Documents/NYC Data Science/Earnings Shiny')
runApp('/Volumes/michaelsankari/Documents/NYC Data Science/Earnings Shiny')
runApp('/Volumes/michaelsankari/Documents/NYC Data Science/Earnings Shiny')
View(quarter_date)
runApp('/Volumes/michaelsankari/Documents/NYC Data Science/Earnings Shiny')
quarter_date <- earnings_returns %>% group_by(., quarter) %>% mutate(., score=ifelse(return>=0, 1, -1)) %>%
summarise(., Long_Short_Score = cumsum(score)/n(), Avg_Win = mean(return))
earnings_returns <- get_earnings_returns()
earnings_returns %>% group_by(., quarter) %>% mutate(., score=ifelse(return>=0, 1, -1))
quarter_date <- earnings_returns %>% group_by(., quarter) %>% mutate(., score=ifelse(return>=0, 1, -1)) %>%
summarise(., Long_Short_Score = sum(score)/n(), Avg_Win = mean(return))
runApp('/Volumes/michaelsankari/Documents/NYC Data Science/Earnings Shiny')
rsconnect::setAccountInfo(name='mks212', token='42FD7E9FCD6265AE9A9FFFF4D4E8E976', secret='tRioDKtPMWI30J64yBD1nckFK4u/ycoWTNkrQ3mw')
library(rsconnect)
rsconnect::deployApp('/Volumes/michaelsankari/Documents/NYC Data Science/Earnings Shiny')
rsconnect::deployApp('/Volumes/michaelsankari/Documents/NYC Data Science/Earnings Shiny')
rsconnect::deployApp('/Volumes/michaelsankari/Documents/NYC Data Science/Earnings Shiny')
