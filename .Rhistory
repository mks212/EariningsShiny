install.packages('rmarkdown')
install.packages('knitr')
install.packages('data.table')
library("TTR", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
detach("package:TTR", unload=TRUE)
matrix(1:12, 4, 3)
matrix(1:12, 4, 4)
matrix(1:12, 4, 5)
v = a, 3 , TRUE
v = 'a', 3 , TRUE
v <- c('a', 3 , TRUE)
class(v)
v <- list('a', 3 , TRUE)
class(v)
v
library(tidyverse)
library(tidyr)
knitr::opts_chunk$set(echo = TRUE)
billboard <- readr::read_csv("./data/billboard.csv")
head(billboard)
billboard2 <- billboard %>%
gather(key="week", value="rank", wk1:wk76, na.rm = TRUE)
head(billboard2)
str(billboard2)
billboard3 <- billboard2 %>%
mutate(
week = readr::parse_number(week),
date = readr::parse_date(date.entered) + 7 * (week - 1)) %>%
select(-date.entered)
billboard3 <- billboard2 %>%
mutate(
week = readr::parse_number(week),
date = readr::parse_date(as.character(date.entered)) + 7 * (week - 1)) %>%
select(-date.entered)
head(billboard3)
weather <- readr::read_csv("./data/weather.csv")
head(weather)
weather2 <- weather %>%
gather(day, value, d1:d31, na.rm = TRUE) %>%
mutate(day=readr::parse_number(day))
head(weather2)
head(weather2)
weather3 <- weather2 %>% spread(element, value)
head(weather3)
head(weather3)
flights = readr::read_csv('./data/flights.csv')
head(flights)
head(flights)
flights2 = separate(flights, route, c("origin", "dest"), sep = "-")
head(flights2)
head(flights2)
flights3 = unite(flights2, date, c(1:3), sep = "-", remove = FALSE)
head(flights3)
head(flights3)
library(googleVis)
install.packages("googleVis")
library(googleVis)
demo(googleVis)
scatter <- gvisScatterChart(mtcars[,c("wt", "mpg")])
plot(scatter)
dt <- mtcars[,c("wt", "mpg")]
dt$cyl_4 <- ifelse(mtcars$cyl==4, dt$mpg, NA)
dt$cyl_6 <- ifelse(mtcars$cyl==6, dt$mpg, NA)
dt$cyl_8 <- ifelse(mtcars$cyl==8, dt$mpg, NA)
dt$mpg <- NULL
head(dt)
scatter <- gvisScatterChart(dt)
plot(scatter)
my_options <- list(width="600px", height="300px",
title="Motor Trend Car Road Tests",
hAxis="{title: 'Weight'}",
vAxis="{title:'Miles'}")
plot(giveScatterChart(dt, options=my_options))
plot(givsScatterChart(dt, options=my_options))
plot(gvisScatterChart(dt, options=my_options))
my_options <- list(width="600px", height="300px",
title="Motor Trend Car Road Tests",
hAxis="{title: 'Weight'}",
vAxis="{title:'Miles'}",
explorer="{actions:['dragToZoom', 'rightClickToReset']}")
plot(gvisScatterChart(dt, options=my_options))
dt <- mtcars[,c("wt", "mpg")]
dt$cyl_4 <- ifelse(mtcars$cyl==4, dt$mpg, NA)
dt$cyl_4.html.tooltip <- rownames(dt)
dt$cyl_6 <- ifelse(mtcars$cyl==6, dt$mpg, NA)
dt$cyl_6.html.tooltip <- rownames(dt)
dt$cyl_8 <- ifelse(mtcars$cyl==8, dt$mpg, NA)
dt$cyl_8.html.tooltip <- rownames(dt)
dt$mpg <- NULL
head(dt)
plot(gvisScatterChart(dt,options=my_options))
devtools::install_github("rstudio/leaflet")
rsconnect::setAccountInfo(name='mks212', token='42FD7E9FCD6265AE9A9FFFF4D4E8E976', secret='tRioDKtPMWI30J64yBD1nckFK4u/ycoWTNkrQ3mw')
install.packages('rsconnect')
rsconnect::setAccountInfo(name='mks212', token='42FD7E9FCD6265AE9A9FFFF4D4E8E976', secret='tRioDKtPMWI30J64yBD1nckFK4u/ycoWTNkrQ3mw')
temp = read.table('https://s3.amazonaws.com/graderdata/Temp.txt', header = TRUE)
View(temp)
#1
summary(temp)
#2
plot(temp$Body.Temp)
ggplot(temp, aes(x=Body.Temp)) +
geom_point()
library(ggplot2)
ggplot(temp, aes(x=Body.Temp)) +
geom_point()
ggplot(temp, aes(x=Gender, y=Body.Temp)) +
geom_point()
plot(temp$Heart.Rate)
#2
plot(temp$Body.Temp)
#2
ggplot(data = temp, aes(x=Body.Temp))+ geom_boxplot()
?t.test
#3
t.test(temp$Body.Temp, mu = 98.6)
#4
t.test(x=temp$Body.Temp[temp$Gender=='Male'], y=temp$Body.Temp[temp$Gender!='Male'],
alternative = "two.sided")
#5
var.test(x=temp$Heart.Rate[temp$Gender=='Male'], y=temp$Heart.Rate[temp$Gender!='Male'],
alternative = "two.sided")
data(PlantGrowth)
View(PlantGrowth)
ggplot(PlantGrowth, aes(x=group, y=weight)) +
geom_boxplot()
library(dplyr)
#2
PlantGrowth %>% group_by(., group) %>% summarise(., sd(weight))
#2
sds <- PlantGrowth %>% group_by(., group) %>% summarise(., sd(weight))
?bartlett.test
bartlett.test(weight~group, data=PlantGrowth)
#1
ggplot(PlantGrowth, aes(x=group, y=weight)) +
geom_boxplot()
#3
aov(PlantGrowth$weight ~ PlantGrowth$group)
#3
summary(aov(PlantGrowth$weight ~ PlantGrowth$group))
data(HairEyeColor)
#1
mosaicplot(HairEyeColor, shade = TRUE)
df <- data.frame(HairEyeColor)
View(df)
df %>% filter(., Sex == 'Female', Eye == 'Brown', Eye == 'Blue')
df %>% filter(., Sex == 'Female', Eye == 'Brown' | Eye == 'Blue')
mosaicplot(df, shade=TRUE)
data(HairEyeColor)
#1
mosaicplot(HairEyeColor, shade = TRUE)
#2
df <- HairEyeColor
df[1]
df[2]
class(df)
df[3]
df[1]]1
df[1][1]
df[1][[1]]
df[1][[2]]
df[[1]]
df[1,2,3]
df[1,2]
df[1][2]
df
df[Sex==Female]
df['Sex'==Female]
df['Sex'=='Female']
df[1:2]
df[1:2][1]
mosaicplot(HairEyeColor, shade = TRUE)
type(df)
class(df)
df[.("Female")]
df[.("Sex")]
df[Sex]
df['Sex']
#2
apply(HairEyeColor, c(1, 2), sum)
#2
apply(HairEyeColor, c(1, 2), print)
#2
apply(HairEyeColor, c(1, 2, 3), print)
#2
apply(HairEyeColor, 1, print)
library(ggplot2)
library(dplyr)
temp = read.table('https://s3.amazonaws.com/graderdata/Temp.txt', header = TRUE)
library(ggplot2)
#1
summary(temp)
# use sapply: sapply(temp, sd)
cor(temp$Body.Temp, temp$Heart.Rate) # Bivariate methods
#2a Example graphical EDA.
# check the distributions
hist(temp$Body.Temp, prob = T)
# what if we change prob = T? plot by frequency; we want to plot probability density here
lines(density(temp$Body.Temp), col = "red")
#2a Example graphical EDA.
# check the distributions
hist(temp$Body.Temp, prob = T)
#2a Example graphical EDA.
# check the distributions
hist(temp$Body.Temp, prob = T)
lines(density(temp$Heart.Rate), col = "red")
# bivariate density plot
plot(density(temp$Body.Temp[temp$Gender == "Female"]), col = "pink")
lines(density(temp$Body.Temp[temp$Gender == "Male"]), col = "blue")
plot(density(temp$Heart.Rate[temp$Gender == "Male"]), col = "blue")
lines(density(temp$Heart.Rate[temp$Gender == "Female"]), col = "pink")
plot(density(temp$Heart.Rate[temp$Gender == "Male"]), col = "blue")
lines(density(temp$Heart.Rate[temp$Gender == "Female"]), col = "pink")
#4
t.test(x=temp$Body.Temp[temp$Gender=='Male'], y=temp$Body.Temp[temp$Gender!='Male'],
alternative = "two.sided")
#3
t.test(temp$Body.Temp, mu = 98.6)
#4
t.test(x=temp$Body.Temp[temp$Gender=='Male'], y=temp$Body.Temp[temp$Gender!='Male'],
alternative = "two.sided")
Ma = temp %>% filter(Gender == 'Male')
Fe = temp %>% filter(Gender == 'Female')
avg = numeric()
for(i in 1:10000){
m = sample(Ma$Body.Temp, 65, replace=T)
f = sample(Fe$Body.Temp, 65, replace=T)
avg[i] = mean(f-m)
}
lower_bnd = mean(avg) - 2*sd(avg)
upper_bnd = mean(avg) + 2*sd(avg)
#5
var.test(x=temp$Heart.Rate[temp$Gender=='Male'], y=temp$Heart.Rate[temp$Gender!='Male'],
alternative = "greater")
?var.test
#5
var.test(x=temp$Heart.Rate[temp$Gender=='Male'], y=temp$Heart.Rate[temp$Gender!='Male'],
alternative = "less")
data(PlantGrowth)
View(PlantGrowth)
#1
ggplot(PlantGrowth, aes(x=group, y=weight)) +
geom_boxplot()
#1
ggplot(PlantGrowth, aes(x=group, y=weight, color=group)) +
geom_boxplot()
#1
ggplot(PlantGrowth, aes(x=group, y=weight, fill=group)) +
geom_boxplot()
bartlett.test(weight~group, data=PlantGrowth)
plot(aov(weight ~ group, data = PlantGrowth))
#3
summary(aov(PlantGrowth$weight ~ PlantGrowth$group))
str(HairEyeColor)
#1ab Visualizing the data with a mosaic plot.
# A mosaic plot is a graphical display that allows you to
# examine the relationship among two or more categorical variables.
mosaicplot(HairEyeColor, shade = TRUE)
#2a Reducing the dataset to all hair colors, brown & blue eye colors, and just
#females.
reduced = HairEyeColor[,1:2,2]
#Chi-Squared test of independence.
reduced.test = chisq.test(reduced)
reduced.test
(reduced.test$observed - reduced.test$expected)^2/reduced.test$expected
reduced.test$observed - reduced.test$expected
shiny::runApp('Documents/NYC Data Science/Earnings Shiny')
